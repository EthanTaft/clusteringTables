tableSize = 9)
class(f$notFull[[4]])
length(f$notFull)
expect_equal(f$notFull[[5]][3, 1], 280)
f$notFull[[5]][3, 1]
f$notFull[[4]][3, 1]
expect_equal(f$notFull[[4]][3, 1], 280)
test_that("gatherTables returns correct fullTables, correct notFull tables", {
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
f <- gatherTables(df = clust_dat, id = "personId", pam_model = d,
tableSize = 9)
expect_equal(length(f$fullTables), 37)
expect_equal(f$fullTables[[32]][9, 1], 298)
expect_equal(length(f$notFull), 5)
expect_equal(f$notFull[[4]][3, 1], 280)
})
devtools::load_all(".")
library(clusteringTables)
devtools::test()
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
f <- gatherTables(df = clust_dat, id = "personId", pam_model = d,
tableSize = 9)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
test_that("gatherTables returns correct fullTables, correct notFull tables", {
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
expect_equal(length(f$fullTables), 37)
expect_equal(f$fullTables[[32]][9, 1], 298)
expect_equal(length(f$notFull), 5)
expect_equal(f$notFull[[4]][3, 1], 280)
})
devtools::load_all(".")
devtools::test()
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
allTables
e$tsneDat
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
devtools::load_all(".")
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
g$dfAssembled
nrow(g$dfAssembled)
ncol(g$dfAssembled)
g$dfAssembled$X[1]
context("Testing assembleToFinalDf is working correctly")
test_that("assembleToFinalDf returns correct df given model build", {
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
expect_equal(nrow(g$dfAssembled), 350)
expect_equal(ncol(g$dfAssembled), 11)
expect_equal(g$dfAssembled[10, 7], "Yes")
expect_equal(g$dfAssembled$X[2], -7.23779736, tolerance = 0.0000001)
})
g$dfAssembled[10, 7]
g$dfAssembled[10, 7] == "Yes"
expect_equal(as.character(g$dfAssembled[10, 7]), "Yes")
expect_equal(as.factor(g$dfAssembled[10, 7]), "Yes")
expect_equal(as.character(g$dfAssembled[10, 7]), "Yes")
test_that("assembleToFinalDf returns correct df given model build", {
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
expect_equal(nrow(g$dfAssembled), 350)
expect_equal(ncol(g$dfAssembled), 11)
expect_equal(as.character(g$dfAssembled[10, 7]), "Yes")
expect_equal(g$dfAssembled$X[2], -7.23779736, tolerance = 0.0000001)
})
library(clusteringTables)
devtools::test()
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
h <- perfMetrics(merged_data = g$dfAssembled)
h$mostCommon
test_that("perfMetrics returns correct mostCommon value", {
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
h <- perfMetrics(merged_data = g$dfAssembled)
expect_equal(h$mostCommon, 0.9298413, tolerance = 0.0000001)
})
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
h <- perfMetrics(merged_data = g$dfAssembled)
devtools::check()
h$numClusters
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
h <- perfMetrics(merged_data = g$dfAssembled)
head(h$finalDf)
ncol(h$finalDf)
h$finalDf
test_that("perfMetrics returns correct final dataframe", {
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
h <- perfMetrics(merged_data = g$dfAssembled)
expect_equal(ncol(h$finalDf), 13)
expect_equal(ncol(h$finalDf), 350)
expect_equal(h$finalDf$mostCommon[5], 1.0000000)
expect_equal(h$finalDf$mostCommon[71], 0.3333333, tolerance = 0.000001)
expect_equal(h$finalDf$numClusters[76], 3)
})
test_that("perfMetrics returns correct final dataframe", {
set.seed(1987)
n = 350
clust_dat <-
data.frame(personId = 1:n,
networkPref = sample(c("topic", "jobtitle", "orgtype"),
size = n, replace = TRUE),
Age = sample(23:65, size = n, replace = TRUE),
familyImp = sample(c(1, 2, 3, 4, 5), size = n, replace = TRUE,
prob = c(0.01, 0.02, 0.4, 0.10, 0.83)),
howOld = sample(1:100, size = n, replace = TRUE),
horror = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.27, 0.73)),
sailBoat = sample(c("Yes", "No"), size = n, replace = TRUE,
prob = c(0.58, 0.42)))
clust_dat$familyImp <- factor(clust_dat$familyImp,
levels = c("1", "2", "3", "4", "5"),
ordered = TRUE)
b <- computeGowerDiss(clust_dat, id = "personId")
d <- buildPamModel(dissimilarities = b$gower_diss, k = 13)
e <- plotClustering(clust_dat, gowerDiss = b$gower_diss, id = "personId",
pam_fit = d)
f <- suppressWarnings(gatherTables(df = clust_dat, id = "personId",
pam_model = d, tableSize = 9))
loTidyFrames <- list(rbind(f$notFull[[1]], f$notFull[[2]], f$notFull[[5]]))
loTidyFrames2 <- list(rbind(f$notFull[[3]], f$notFull[[4]]))
allTables <- c(f$fullTables, loTidyFrames, loTidyFrames2)
g <- assembleToDf(tableList = allTables, df = clust_dat, id = "personId",
tsne_results = e$tsneDat)
h <- perfMetrics(merged_data = g$dfAssembled)
expect_equal(ncol(h$finalDf), 13)
expect_equal(nrow(h$finalDf), 350)
expect_equal(h$finalDf$mostCommon[5], 1.0000000)
expect_equal(h$finalDf$mostCommon[71], 0.3333333, tolerance = 0.000001)
expect_equal(h$finalDf$numClusters[76], 3)
})
library(clusteringTables)
devtools::test()
library(clusteringTables)
devtools::test()
devtool::check()
devtools::check()
devtools::load_all(".")
library(clusteringTables)
document()
library(devtools)
document()
devtools::document()
library(clusteringTables)
devtools::check()
devtools::check()
library(clusteringTables)
devtools::check()
library(clusteringTables)
devtools::check()
devtools::load_all(".")
library(clusteringTables)
devtools::check()
library(clusteringTables)
devtools::check()
library(clusteringTables)
library(clusteringTables)
devtools::check()
library(clusteringTables)
devtools::check()
library(clusteringTables)
document()
devtools::check()
library(clusteringTables)
devtools::check()
library(clusteringTables)
devtools::test()
devtools::check()
